
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Dec 18 17:28:09 CET 2023
//----------------------------------------------------

import java_cup.runtime.*;
import java.io.*;

/** CUP v0.10k generated parser.
  * @version Mon Dec 18 17:28:09 CET 2023
  */
public class MPParserOporavak extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MPParserOporavak() {super();}

  /** Constructor which sets the default scanner. */
  public MPParserOporavak(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\057\000\002\002\004\000\002\003\005\000\002\003" +
    "\005\000\002\004\006\000\002\004\006\000\002\004\005" +
    "\000\002\005\004\000\002\005\002\000\002\007\006\000" +
    "\002\007\006\000\002\012\005\000\002\012\003\000\002" +
    "\011\003\000\002\011\003\000\002\011\003\000\002\011" +
    "\003\000\002\006\003\000\002\006\004\000\002\013\003" +
    "\000\002\013\006\000\002\013\003\000\002\014\006\000" +
    "\002\016\004\000\002\016\003\000\002\016\004\000\002" +
    "\017\006\000\002\017\006\000\002\015\005\000\002\015" +
    "\003\000\002\015\005\000\002\025\005\000\002\025\003" +
    "\000\002\025\005\000\002\021\005\000\002\021\003\000" +
    "\002\021\005\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\024\003\000\002\024" +
    "\003\000\002\024\003\000\002\022\003\000\002\022\003" +
    "\000\002\022\005\000\002\022\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\107\000\004\004\005\001\002\000\004\002\111\001" +
    "\002\000\004\006\007\001\002\000\006\003\107\011\110" +
    "\001\002\000\012\003\ufffa\006\ufffa\010\ufffa\021\ufffa\001" +
    "\002\000\012\003\020\006\007\010\017\021\021\001\002" +
    "\000\006\012\076\013\075\001\002\000\016\003\uffed\005" +
    "\uffed\006\uffed\010\uffed\021\uffed\022\uffed\001\002\000\016" +
    "\003\uffef\005\uffef\006\uffef\010\uffef\021\uffef\022\uffef\001" +
    "\002\000\014\003\072\005\074\006\007\010\052\021\021" +
    "\001\002\000\012\003\ufffb\006\ufffb\010\ufffb\021\ufffb\001" +
    "\002\000\014\003\ufff1\005\ufff1\006\ufff1\010\ufff1\021\ufff1" +
    "\001\002\000\010\012\ufff6\013\ufff6\032\055\001\002\000" +
    "\020\003\ufffc\005\ufffc\006\ufffc\010\ufffc\011\ufffc\021\ufffc" +
    "\022\ufffc\001\002\000\004\006\022\001\002\000\004\022" +
    "\024\001\002\000\010\003\uffea\005\uffea\022\uffea\001\002" +
    "\000\010\010\033\023\031\034\037\001\002\000\010\003" +
    "\027\005\030\022\024\001\002\000\010\003\uffeb\005\uffeb" +
    "\022\uffeb\001\002\000\010\003\uffe9\005\uffe9\022\uffe9\001" +
    "\002\000\016\003\uffec\005\uffec\006\uffec\010\uffec\021\uffec" +
    "\022\uffec\001\002\000\032\003\uffd5\014\uffd5\024\uffd5\025" +
    "\uffd5\026\uffd5\027\uffd5\030\uffd5\031\uffd5\033\uffd5\035\uffd5" +
    "\036\uffd5\037\uffd5\001\002\000\016\003\uffe2\014\uffe2\033" +
    "\uffe2\035\uffe2\036\uffe2\037\uffe2\001\002\000\032\003\uffd6" +
    "\014\uffd6\024\uffd6\025\uffd6\026\uffd6\027\uffd6\030\uffd6\031" +
    "\uffd6\033\uffd6\035\uffd6\036\uffd6\037\uffd6\001\002\000\032" +
    "\003\061\014\uffdf\024\065\025\066\026\063\027\064\030" +
    "\062\031\067\033\uffdf\035\uffdf\036\uffdf\037\uffdf\001\002" +
    "\000\006\033\051\037\043\001\002\000\016\003\uffe5\014" +
    "\uffe5\033\uffe5\035\uffe5\036\046\037\uffe5\001\002\000\010" +
    "\010\033\023\031\034\037\001\002\000\010\003\042\035" +
    "\041\037\043\001\002\000\032\003\uffd4\014\uffd4\024\uffd4" +
    "\025\uffd4\026\uffd4\027\uffd4\030\uffd4\031\uffd4\033\uffd4\035" +
    "\uffd4\036\uffd4\037\uffd4\001\002\000\032\003\uffd3\014\uffd3" +
    "\024\uffd3\025\uffd3\026\uffd3\027\uffd3\030\uffd3\031\uffd3\033" +
    "\uffd3\035\uffd3\036\uffd3\037\uffd3\001\002\000\012\003\044" +
    "\010\033\023\031\034\037\001\002\000\014\003\uffe4\014" +
    "\uffe4\033\uffe4\035\uffe4\037\uffe4\001\002\000\016\003\uffe6" +
    "\014\uffe6\033\uffe6\035\uffe6\036\046\037\uffe6\001\002\000" +
    "\012\003\050\010\033\023\031\034\037\001\002\000\016" +
    "\003\uffe3\014\uffe3\033\uffe3\035\uffe3\036\uffe3\037\uffe3\001" +
    "\002\000\016\003\uffe1\014\uffe1\033\uffe1\035\uffe1\036\uffe1" +
    "\037\uffe1\001\002\000\012\003\053\006\007\010\052\021" +
    "\021\001\002\000\004\032\055\001\002\000\010\003\uffe7" +
    "\005\uffe7\022\uffe7\001\002\000\010\003\uffe8\005\uffe8\022" +
    "\uffe8\001\002\000\010\010\033\023\031\034\037\001\002" +
    "\000\006\014\057\037\043\001\002\000\016\003\uffee\005" +
    "\uffee\006\uffee\010\uffee\021\uffee\022\uffee\001\002\000\012" +
    "\003\071\010\033\023\031\034\037\001\002\000\012\003" +
    "\uffd7\010\uffd7\023\uffd7\034\uffd7\001\002\000\012\003\uffd9" +
    "\010\uffd9\023\uffd9\034\uffd9\001\002\000\012\003\uffdb\010" +
    "\uffdb\023\uffdb\034\uffdb\001\002\000\012\003\uffda\010\uffda" +
    "\023\uffda\034\uffda\001\002\000\012\003\uffdd\010\uffdd\023" +
    "\uffdd\034\uffdd\001\002\000\012\003\uffdc\010\uffdc\023\uffdc" +
    "\034\uffdc\001\002\000\012\003\uffd8\010\uffd8\023\uffd8\034" +
    "\uffd8\001\002\000\016\003\uffe0\014\uffe0\033\uffe0\035\uffe0" +
    "\036\uffe0\037\uffe0\001\002\000\016\003\uffde\014\uffde\033" +
    "\uffde\035\uffde\036\uffde\037\uffde\001\002\000\020\003\ufffd" +
    "\005\ufffd\006\ufffd\010\ufffd\011\ufffd\021\ufffd\022\ufffd\001" +
    "\002\000\014\003\ufff0\005\ufff0\006\ufff0\010\ufff0\021\ufff0" +
    "\001\002\000\020\003\ufffe\005\ufffe\006\ufffe\010\ufffe\011" +
    "\ufffe\021\ufffe\022\ufffe\001\002\000\004\010\106\001\002" +
    "\000\012\015\077\016\101\017\103\020\102\001\002\000" +
    "\006\003\ufff5\014\ufff5\001\002\000\006\003\105\014\104" +
    "\001\002\000\006\003\ufff4\014\ufff4\001\002\000\006\003" +
    "\ufff3\014\ufff3\001\002\000\006\003\ufff2\014\ufff2\001\002" +
    "\000\012\003\ufff9\006\ufff9\010\ufff9\021\ufff9\001\002\000" +
    "\012\003\ufff8\006\ufff8\010\ufff8\021\ufff8\001\002\000\006" +
    "\012\ufff7\013\ufff7\001\002\000\004\002\uffff\001\002\000" +
    "\004\002\000\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\107\000\004\003\003\001\001\000\002\001\001\000" +
    "\004\004\005\001\001\000\002\001\001\000\004\005\007" +
    "\001\001\000\016\004\011\006\013\007\014\012\010\013" +
    "\015\014\012\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\004\011\013\072\014\012\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\016\024\017" +
    "\022\001\001\000\002\001\001\000\012\015\034\021\031" +
    "\022\033\025\035\001\001\000\004\017\025\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\024" +
    "\057\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\015\037\021\031\022\033\025\035\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\021\031" +
    "\022\033\025\044\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\021\046\022\033\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\004\011\013\053\014\012\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\015\055\021\031\022\033\025\035\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\022\067\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\077\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MPParserOporavak$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MPParserOporavak$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MPParserOporavak$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public static void main( String[] args )
    {
        try
        {
            FileReader file = new FileReader( args[0] );
            Scanner scanner = new MPLexer( file );
            MPParserOporavak parser = new MPParserOporavak( scanner );
			Symbol syntax_tree = parser.parse();
			System.out.println(syntax_tree);
			System.out.println(syntax_tree.value);
        }
        catch( Exception e )
        {
            e.printStackTrace();
        }
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MPParserOporavak$actions {
  private final MPParserOporavak parser;

  /** Constructor */
  CUP$MPParserOporavak$actions(MPParserOporavak parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MPParserOporavak$do_action(
    int                        CUP$MPParserOporavak$act_num,
    java_cup.runtime.lr_parser CUP$MPParserOporavak$parser,
    java.util.Stack            CUP$MPParserOporavak$stack,
    int                        CUP$MPParserOporavak$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MPParserOporavak$result;

      /* select the action based on the action number */
      switch (CUP$MPParserOporavak$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Term ::= LEFTPAR Expression error 
            {
              Object RESULT = null;
		
    System.out.println("Nedostaje ) u smeni 16 ");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(16/*Term*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Term ::= LEFTPAR Expression RIGHTPAR 
            {
              Object RESULT = null;
		
    System.out.println("Smena 16 => LEFTPAR Expression RIGHTPAR ");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(16/*Term*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Term ::= CONST 
            {
              Object RESULT = null;
		
    System.out.println("Smena 16 => CONST ");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(16/*Term*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Term ::= ID 
            {
              Object RESULT = null;
		
    System.out.println("Smena 16 => ID ");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(16/*Term*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // RelOp ::= error 
            {
              Object RESULT = null;
		
    System.out.println("Pogresan operator u smeni 15");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(18/*RelOp*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // RelOp ::= GREATEROREQ 
            {
              Object RESULT = null;
		
    System.out.println("Smena 15 => GREATEROREQ!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(18/*RelOp*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // RelOp ::= GREATER 
            {
              Object RESULT = null;
		
    System.out.println("Smena 15 => GREATER!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(18/*RelOp*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // RelOp ::= NOTEQ 
            {
              Object RESULT = null;
		
    System.out.println("Smena 15 => NOTEQ!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(18/*RelOp*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // RelOp ::= EQUAL 
            {
              Object RESULT = null;
		
    System.out.println("Smena 15 => EQUAL!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(18/*RelOp*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // RelOp ::= LESSOREQ 
            {
              Object RESULT = null;
		
    System.out.println("Smena 15 => LESSOREQ!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(18/*RelOp*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // RelOp ::= LESS 
            {
              Object RESULT = null;
		
    System.out.println("Smena 15 => LESS!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(18/*RelOp*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // RelExpression ::= Term RelOp error 
            {
              Object RESULT = null;
		
    System.out.println("Fali Term u smeni 14");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(15/*RelExpression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // RelExpression ::= Term 
            {
              Object RESULT = null;
		
    System.out.println("Smena 14 => Term!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(15/*RelExpression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // RelExpression ::= Term RelOp Term 
            {
              Object RESULT = null;
		
    System.out.println("Smena 14 => Term RelOp Term!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(15/*RelExpression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // AndExpression ::= AndExpression AND error 
            {
              Object RESULT = null;
		
    System.out.println("Fali RelExpression u smeni 13");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(19/*AndExpression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // AndExpression ::= RelExpression 
            {
              Object RESULT = null;
		
    System.out.println("Smena 13 => RelExpression!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(19/*AndExpression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // AndExpression ::= AndExpression AND RelExpression 
            {
              Object RESULT = null;
		
    System.out.println("Smena 13 => AndExpression AND RelExpression!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(19/*AndExpression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Expression ::= Expression OR error 
            {
              Object RESULT = null;
		
    System.out.println("Fali AndExpression u smeni 12");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(11/*Expression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Expression ::= AndExpression 
            {
              Object RESULT = null;
		
    System.out.println("Smena 12 => AndExpression!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(11/*Expression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Expression ::= Expression OR AndExpression 
            {
              Object RESULT = null;
		
    System.out.println("Smena 12 => Expression OR AndExpression!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(11/*Expression*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Case ::= CASE Expression LAMBDA error 
            {
              Object RESULT = null;
		
    System.out.println("Smena 11 => Case!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(13/*Case*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Case ::= CASE Expression LAMBDA Statement 
            {
              Object RESULT = null;
		
    System.out.println("Smena 11 => Case!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(13/*Case*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CaseList ::= CaseList error 
            {
              Object RESULT = null;
		
    System.out.println("Fali CASE u smeni 10");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(12/*CaseList*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-1)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CaseList ::= Case 
            {
              Object RESULT = null;
		
    System.out.println("Smena 10 => Case!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(12/*CaseList*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CaseList ::= CaseList Case 
            {
              Object RESULT = null;
		
    System.out.println("Smena 10 => CaseList Case!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(12/*CaseList*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-1)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SelectStatement ::= SELECT BEGIN CaseList END 
            {
              Object RESULT = null;
		
    System.out.println("Smena 9 => SelectStatement!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(10/*SelectStatement*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Statement ::= Block 
            {
              Object RESULT = null;
		
    System.out.println("Smena 8 => Block!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(9/*Statement*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Statement ::= ID ASSIGN Expression SEMICOLON 
            {
              Object RESULT = null;
		
    System.out.println("Smena 8 => ID := Expression;!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(9/*Statement*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Statement ::= SelectStatement 
            {
              Object RESULT = null;
		
    System.out.println("Smena 8 => SelectStatement!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(9/*Statement*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // StatementList ::= StatementList Statement 
            {
              Object RESULT = null;
		
    System.out.println("Smena 7 => StatementList Statement!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(4/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-1)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // StatementList ::= Statement 
            {
              Object RESULT = null;
		
    System.out.println("Smena 7 => Statement!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(4/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Type ::= BOOLEAN 
            {
              Object RESULT = null;
		
    System.out.println("Smena 6 => Type bool!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(7/*Type*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Type ::= CHAR 
            {
              Object RESULT = null;
		
    System.out.println("Smena 6 => Type CHAR!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(7/*Type*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Type ::= REAL 
            {
              Object RESULT = null;
		
    System.out.println("Smena 6 => Type double!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(7/*Type*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Type ::= INTEGER 
            {
              Object RESULT = null;
		
    System.out.println("Smena 6 => Type int!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(7/*Type*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // NameList ::= ID 
            {
              Object RESULT = null;
		
    System.out.println("Smena 5 => ID");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(8/*NameList*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // NameList ::= NameList COMMA ID 
            {
              Object RESULT = null;
		
    System.out.println("Smena 5 => NameList, ID");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(8/*NameList*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Declaration ::= NameList COLON Type error 
            {
              Object RESULT = null;
		
    System.out.println("Fali ; u smeni 4!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(5/*Declaration*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Declaration ::= NameList COLON Type SEMICOLON 
            {
              Object RESULT = null;
		
    System.out.println("Smena 4 => Declaration !");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(5/*Declaration*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Variables ::= 
            {
              Object RESULT = null;
		
    System.out.println("Smena 3 => EPSYLON!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(3/*Variables*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Variables ::= Variables Declaration 
            {
              Object RESULT = null;
		
    System.out.println("Smena 3 => Declarations!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(3/*Variables*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-1)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Block ::= BEGIN Variables error 
            {
              Object RESULT = null;
		
    System.out.println("Fali StatementList END u Smeni 2");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(2/*Block*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Block ::= BEGIN Variables StatementList error 
            {
              Object RESULT = null;
		
    System.out.println("Fali END u Smeni 2");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(2/*Block*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Block ::= BEGIN Variables StatementList END 
            {
              Object RESULT = null;
		
    System.out.println("Smena 2 => Block !");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(2/*Block*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Program ::= PROGRAM Block error 
            {
              Object RESULT = null;
		
    System.out.println("Fali tacka u smeni 1!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= PROGRAM Block DOT 
            {
              Object RESULT = null;
		
    System.out.println("Smena 1 => Program!");

              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          return CUP$MPParserOporavak$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-1)).value;
		RESULT = start_val;
              CUP$MPParserOporavak$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-1)).left, ((java_cup.runtime.Symbol)CUP$MPParserOporavak$stack.elementAt(CUP$MPParserOporavak$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MPParserOporavak$parser.done_parsing();
          return CUP$MPParserOporavak$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

